{"ast":null,"code":"import _slicedToArray from \"D:\\\\My_PR\\\\react-audio-player-demo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\My_PR\\\\react-audio-player-demo\\\\src\\\\AudioPlayer.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport Backdrop from \"./Backdrop\";\nimport \"./styles.css\";\nvar AudioPlayer = function AudioPlayer(_ref) {\n  var tracks = _ref.tracks;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    trackIndex = _useState2[0],\n    setTrackIndex = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    trackProgress = _useState4[0],\n    setTrackProgress = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPlaying = _useState6[0],\n    setIsPlaying = _useState6[1];\n  var _tracks$trackIndex = tracks[trackIndex],\n    title = _tracks$trackIndex.title,\n    artist = _tracks$trackIndex.artist,\n    color = _tracks$trackIndex.color,\n    image = _tracks$trackIndex.image,\n    audioSrc = _tracks$trackIndex.audioSrc;\n  var audioRef = useRef(new Audio(audioSrc));\n  var intervalRef = useRef();\n  var isReady = useRef(false);\n  var duration = audioRef.current.duration;\n  var handleStartTimer = function handleStartTimer() {\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(function () {\n      if (audioRef.current.ended) {\n        handleNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n  var handleScrub = function handleScrub(value) {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n  var handleScrubEnd = function handleScrubEnd() {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    handleStartTimer();\n  };\n  var handlePrevTrack = function handlePrevTrack() {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n  var handleNextTrack = function handleNextTrack() {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n  var handleChangeVolume = function handleChangeVolume(value) {\n    console.log(value);\n    audioRef.current.volume = value / 100;\n  };\n  useEffect(function () {\n    if (isPlaying) {\n      audioRef.current.play();\n      handleStartTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  useEffect(function () {\n    audioRef.current.pause();\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      handleStartTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n  useEffect(function () {\n    return function () {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"audio-player\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    value: trackProgress,\n    step: \"1\",\n    min: \"0\",\n    max: duration ? duration : \"\".concat(duration),\n    className: \"progress\",\n    onChange: function onChange(e) {\n      return handleScrub(e.target.value);\n    },\n    onMouseUp: handleScrubEnd,\n    onKeyUp: handleScrubEnd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    value: audioRef.current.volume * 100,\n    step: \"10\",\n    min: \"0\",\n    max: 100,\n    className: \"progress\",\n    onChange: function onChange(e) {\n      return handleChangeVolume(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"track-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"artist\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, artist), /*#__PURE__*/React.createElement(AudioControls, {\n    isPlaying: isPlaying,\n    onPrevClick: handlePrevTrack,\n    onNextClick: handleNextTrack,\n    onPlayPauseClick: setIsPlaying,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Backdrop, {\n    trackIndex: trackIndex,\n    activeColor: color,\n    isPlaying: isPlaying,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\nexport default AudioPlayer;","map":{"version":3,"names":["React","useState","useEffect","useRef","AudioControls","Backdrop","AudioPlayer","tracks","trackIndex","setTrackIndex","trackProgress","setTrackProgress","isPlaying","setIsPlaying","title","artist","color","image","audioSrc","audioRef","Audio","intervalRef","isReady","duration","current","handleStartTimer","clearInterval","setInterval","ended","handleNextTrack","currentTime","handleScrub","value","handleScrubEnd","handlePrevTrack","length","handleChangeVolume","console","log","volume","play","pause","e","target"],"sources":["D:/My_PR/react-audio-player-demo/src/AudioPlayer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport AudioControls from \"./AudioControls\";\nimport Backdrop from \"./Backdrop\";\nimport \"./styles.css\";\n\nconst AudioPlayer = ({ tracks }) => {\n  const [trackIndex, setTrackIndex] = useState(0);\n  const [trackProgress, setTrackProgress] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const { title, artist, color, image, audioSrc } = tracks[trackIndex];\n\n  const audioRef = useRef(new Audio(audioSrc));\n  const intervalRef = useRef();\n  const isReady = useRef(false);\n\n  const { duration } = audioRef.current;\n\n  const handleStartTimer = () => {\n    clearInterval(intervalRef.current);\n\n    intervalRef.current = setInterval(() => {\n      if (audioRef.current.ended) {\n        handleNextTrack();\n      } else {\n        setTrackProgress(audioRef.current.currentTime);\n      }\n    }, [1000]);\n  };\n\n  const handleScrub = (value) => {\n    clearInterval(intervalRef.current);\n    audioRef.current.currentTime = value;\n    setTrackProgress(audioRef.current.currentTime);\n  };\n\n  const handleScrubEnd = () => {\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n    handleStartTimer();\n  };\n\n  const handlePrevTrack = () => {\n    if (trackIndex - 1 < 0) {\n      setTrackIndex(tracks.length - 1);\n    } else {\n      setTrackIndex(trackIndex - 1);\n    }\n  };\n\n  const handleNextTrack = () => {\n    if (trackIndex < tracks.length - 1) {\n      setTrackIndex(trackIndex + 1);\n    } else {\n      setTrackIndex(0);\n    }\n  };\n\n  const handleChangeVolume = (value) => {\n    console.log(value);\n    audioRef.current.volume = value / 100;\n  };\n\n  useEffect(() => {\n    if (isPlaying) {\n      audioRef.current.play();\n      handleStartTimer();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    audioRef.current.pause();\n\n    audioRef.current = new Audio(audioSrc);\n    setTrackProgress(audioRef.current.currentTime);\n\n    if (isReady.current) {\n      audioRef.current.play();\n      setIsPlaying(true);\n      handleStartTimer();\n    } else {\n      isReady.current = true;\n    }\n  }, [trackIndex]);\n\n  useEffect(() => {\n    return () => {\n      audioRef.current.pause();\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"audio-player\">\n      <input\n        type=\"range\"\n        value={trackProgress}\n        step=\"1\"\n        min=\"0\"\n        max={duration ? duration : `${duration}`}\n        className=\"progress\"\n        onChange={(e) => handleScrub(e.target.value)}\n        onMouseUp={handleScrubEnd}\n        onKeyUp={handleScrubEnd}\n      />\n      <input\n        type=\"range\"\n        value={audioRef.current.volume * 100}\n        step=\"10\"\n        min=\"0\"\n        max={100}\n        className=\"progress\"\n        onChange={(e) => handleChangeVolume(e.target.value)}\n      />\n      <div className=\"track-info\">\n        <h2 className=\"title\">{title}</h2>\n        <h3 className=\"artist\">{artist}</h3>\n        <AudioControls\n          isPlaying={isPlaying}\n          onPrevClick={handlePrevTrack}\n          onNextClick={handleNextTrack}\n          onPlayPauseClick={setIsPlaying}\n        />\n      </div>\n      <Backdrop\n        trackIndex={trackIndex}\n        activeColor={color}\n        isPlaying={isPlaying}\n      />\n    </div>\n  );\n};\n\nexport default AudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}